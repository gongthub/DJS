select t.Sort,
	   t.StoreCode,
	   t.StoreName,
	   t.RoomCount,
	   t.LastRealRentSum,
	   t.RealRentSum,
	   t.RealIncomeMom,
	   t.LastRevpar,
	   t.Revpar,
	   t.RevparMom,
	   t.LastRealRentRate +'%' as LastRealRentRate,
	   t.RealRentRate+'%' as  RealRentRate,
	   (case when ISNULL(t.LastRealRentRate,'')='' then '' else convert(nvarchar(30),cast(round((convert(decimal(18,2),t.RealRentRate)-convert(decimal(18,2),t.LastRealRentRate))*100.0/t.LastRealRentRate,2) AS NUMERIC(18,2)))+'%' end) as RealRentRateMom,
	   CAST((case when t.LastRealContractCount=0 then 0 else t.LastRealRoomFee/t.LastRealContractCount end) as decimal(18,0))  as LastRealArgRoomPrice,
	   CAST((case when t.RealContractCount=0 then 0 else t.RealRoomFee/t.RealContractCount end) as decimal(18,0))  as RealArgRoomPrice,
	   (case when CAST((case when t.LastRealContractCount=0 then 0 else t.LastRealRoomFee/t.LastRealContractCount end) as decimal(18,0))=0 then '' else convert(nvarchar(30),cast(round((convert(decimal(18,2),CAST((case when t.RealContractCount=0 then 0 else t.RealRoomFee/t.RealContractCount end) as decimal(18,0)))-convert(decimal(18,2),CAST((case when t.LastRealContractCount=0 then 0 else t.LastRealRoomFee/t.LastRealContractCount end) as decimal(18,0))))*100.0/CAST((case when t.LastRealContractCount=0 then 0 else t.LastRealRoomFee/t.LastRealContractCount end) as decimal(18,0)),2) AS NUMERIC(18,2)))+'%' end) as RealArgRoomPriceMom,
	   t.LastNetRentIncome,
	   t.NetRentIncome,
	   t.NetRentIncomeMom,
	   t.LastDefaultIncome,
	   t.DefaultIncome,
	   t.DefaultIncomeMom
from
(
	SELECT A.ID AS [Sort],
		   A.CityCode AS [StoreCode],
		   A.CityName AS [StoreName],
		   SUM(ISNULL(J.RoomNo,0)) AS [RoomCount],
		   SUM(ISNULL(H.InComeSum,0)) AS [LastRealRentSum],
		   SUM(ISNULL(J.InComeSum,0)) AS [RealRentSum],
			CASE WHEN SUM(H.InComeSum)=0 THEN '' ELSE  CONVERT(NVARCHAR(30),CAST(ROUND((SUM(J.InComeSum)-SUM(H.InComeSum))*100.0/SUM(H.InComeSum),2) AS NUMERIC(18,2)))+'%' END AS [RealIncomeMom],
		CASE WHEN SUM(H.RoomNo)=0 THEN 0 ELSE CAST(ROUND(SUM(H.InComeSum)/SUM(H.RoomNo),0) AS NUMERIC(18,0)) END AS [LastRevpar],
		CASE WHEN SUM(J.RoomNo)=0 THEN 0 ELSE CAST(ROUND(SUM(J.InComeSum)/SUM(J.RoomNo),0) AS NUMERIC(18,0)) END AS [Revpar],
		CASE WHEN SUM(H.RoomNo)=0 THEN ''  WHEN  SUM(J.RoomNo)=0 THEN '' ELSE (CASE WHEN SUM(H.InComeSum)/SUM(H.RoomNo)=0 THEN '' ELSE CONVERT(NVARCHAR(30),CAST(ROUND((SUM(J.InComeSum)/SUM(J.RoomNo)-SUM(H.InComeSum)/SUM(H.RoomNo))*100.0/(SUM(H.InComeSum)/SUM(H.RoomNo)),2) AS NUMERIC(18,2)))+'%' END) END AS RevparMom,
		CASE WHEN SUM(H.RoomNoSum)=0 THEN '' ELSE  CONVERT(NVARCHAR(30),CAST(ROUND(SUM(H.LeasedRoomSum)*100.0/SUM(H.RoomNoSum),2) AS NUMERIC(18,2))) END AS [LastRealRentRate],
		CASE WHEN SUM(J.RoomNoSum)=0 THEN '' ELSE  CONVERT(NVARCHAR(30),CAST(ROUND(SUM(J.LeasedRoomSum)*100.0/SUM(J.RoomNoSum),2) AS NUMERIC(18,2))) END AS [RealRentRate],
		(Select SUM(CharterMoney)  From ContractFees Where ContractID In (select distinct ContractID from ContractOps  left join Contracts on ContractOps.ContractID=Contracts.ID where  ContractOps.CreateDate between '{0}' and '{1}')) AS LastRealRoomFee,
		(Select Isnull(SUM(case when SpecialRooms.ID is null then 1 else SpecialRooms.BigRoomCount end),0) From Contracts Left Join Rooms on Contracts.RoomID=Rooms.ID Left Join (select * from SpecialRooms where Type=1) SpecialRooms on SpecialRooms.RoomID=Rooms.ID  Where  Contracts.ID In (select distinct ContractID from ContractOps  left join Contracts on ContractOps.ContractID=Contracts.ID where  ContractOps.CreateDate between '{0}' and '{1}')) AS LastRealContractCount,
		(Select SUM(CharterMoney)  From ContractFees Where ContractID In (select distinct ContractID from ContractOps  left join Contracts on ContractOps.ContractID=Contracts.ID where  ContractOps.CreateDate between '{2}' and '{3}')) AS RealRoomFee,
		(Select Isnull(SUM(case when SpecialRooms.ID is null then 1 else SpecialRooms.BigRoomCount end),0) From Contracts Left Join Rooms on Contracts.RoomID=Rooms.ID Left Join (select * from SpecialRooms where Type=1) SpecialRooms on SpecialRooms.RoomID=Rooms.ID  Where  Contracts.ID In (select distinct ContractID from ContractOps  left join Contracts on ContractOps.ContractID=Contracts.ID where  ContractOps.CreateDate between '{2}' and '{3}')) AS RealContractCount,
		SUM(H.LastNetRentIncome) AS LastNetRentIncome,
		SUM(J.NetRentIncome) AS NetRentIncome,
		CASE WHEN SUM(H.LastNetRentIncome)=0 THEN '' ELSE CONVERT(NVARCHAR(30),CAST(ROUND((SUM(J.NetRentIncome)-SUM(H.LastNetRentIncome))*100.0/SUM(H.LastNetRentIncome),2) AS NUMERIC(18,2)))+'%' END AS NetRentIncomeMom,
		SUM(H.LastDefaultIncome) AS LastDefaultIncome,
		SUM(J.DefaultIncome) AS DefaultIncome,
		CASE WHEN SUM(H.LastDefaultIncome)=0 THEN '' ELSE CONVERT(NVARCHAR(30),CAST(ROUND((SUM(J.DefaultIncome)-SUM(H.LastDefaultIncome))*100.0/SUM(H.LastDefaultIncome),2) AS NUMERIC(18,2)))+'%' END AS DefaultIncomeMom
	FROM Cities AS A
	INNER JOIN Items AS B ON B.CityID=A.Id
	INNER JOIN Stores AS C ON C.ItemID=B.Id
	LEFT JOIN (
				Select t1.StoreID,SUM(ISNULL(t1.Amount,0))+SUM(ISNULL(I.Amount,0)) As InComeSum,
				--上期最新房间数
				(select top 1 RoomNo from DailyStores where SynDate<='{1}' and StoreID=t1.StoreID order by SynDate desc) as RoomNo,
				--上期房间总数
				(select sum(RoomNo) from DailyStores where SynDate between '{0}' and '{1}' and StoreID=t1.StoreID group by StoreID) as RoomNoSum,
				--房间已租数
				(select sum(LeasedRoom) from DailyStores where SynDate between '{0}' and '{1}' and StoreID=t1.StoreID group by StoreID) as LeasedRoomSum,
				--净租金
				(select isnull(sum(Amount),0) from PaymentMethods left join PeriodicCharges on PaymentMethods.ID=PeriodicCharges.PaymentMethodID left join Contracts on Contracts.ID=PeriodicCharges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID where PaymentMethods.Date between '{0}' and '{1}' and Rooms.StoreID=t1.StoreID and PeriodicCharges.FeeType in ('31') and PaymentMethods.Status=2 and PeriodicCharges.Status=1) as LastNetRentIncome,
				--违约金
				(select isnull(sum(Amount),0) from PaymentMethods left join Charges on PaymentMethods.ID=Charges.PaymentMethodID left join Contracts on Contracts.ID=Charges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID where PaymentMethods.Date between '{0}' and '{1}' and Rooms.StoreID=t1.StoreID and Charges.FeeType in ('14') and  PaymentMethods.Status=2) as LastDefaultIncome
				From PaymentMethods As D 
				--门店收费(包含预约)
				Left Join (select Amount,PaymentMethodID,Status from StoreCharges where Status=1) As I On I.PaymentMethodID=D.ID
				Left Join (
							--标准合同
							select Rooms.StoreID,PeriodicCharges.Status,PeriodicCharges.PaymentMethodID,PeriodicCharges.Amount from PeriodicCharges left join Contracts on Contracts.ID=PeriodicCharges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID
							union all
							--预定 
							select Rooms.StoreID,ReservationCharges.Status,ReservationCharges.PaymentMethodID,ReservationCharges.Amount from ReservationCharges left join Reservations on Reservations.ID=ReservationCharges.ReservationID left join Rooms on Rooms.ID=Reservations.RoomID
							union all
							--一次性收费
							select Rooms.StoreID,Charges.Status,Charges.PaymentMethodID,Charges.Amount from Charges left join Contracts on Charges.ContractID=Contracts.ID left join Rooms on Rooms.ID=Contracts.RoomID
							) as t1 on D.ID=t1.PaymentMethodID
				Where  D.Date Between '{0}' and '{1}' 
								And t1.Status=1 And D.Status=2
				Group By t1.StoreID
			 ) AS H ON H.StoreID=C.ID
	LEFT JOIN (
		Select t1.StoreID,SUM(ISNULL(t1.Amount,0))+SUM(ISNULL(I.Amount,0)) As InComeSum,
		--最新房间数
		(select top 1 RoomNo from DailyStores where SynDate<='{3}' and StoreID=t1.StoreID order by SynDate desc) as RoomNo,
		--房间总数
		(select sum(RoomNo) from DailyStores where SynDate between  '{2}' and '{3}' and StoreID=t1.StoreID group by StoreID) as RoomNoSum,
		--房间已租数
		(select sum(LeasedRoom) from DailyStores where SynDate between '{2}' and '{3}' and StoreID=t1.StoreID group by StoreID) as LeasedRoomSum,
		--净租金
		(select isnull(sum(Amount),0) from PaymentMethods left join PeriodicCharges on PaymentMethods.ID=PeriodicCharges.PaymentMethodID left join Contracts on Contracts.ID=PeriodicCharges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID where PaymentMethods.Date between '{2}' and '{3}' and Rooms.StoreID=t1.StoreID and PeriodicCharges.FeeType in ('31') and PaymentMethods.Status=2 and PeriodicCharges.Status=1) as NetRentIncome,
		--违约金
		(select isnull(sum(Amount),0) from PaymentMethods left join Charges on PaymentMethods.ID=Charges.PaymentMethodID left join Contracts on Contracts.ID=Charges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID where PaymentMethods.Date between '{2}' and '{3}' and Rooms.StoreID=t1.StoreID and Charges.FeeType in ('14') and  PaymentMethods.Status=2) as DefaultIncome
		From PaymentMethods As D 
		--门店收费(包含预约)
		Left Join (select Amount,PaymentMethodID,Status from StoreCharges where Status=1) As I On I.PaymentMethodID=D.ID
		Left Join (
					--标准合同
					select Rooms.StoreID,PeriodicCharges.Status,PeriodicCharges.PaymentMethodID,PeriodicCharges.Amount from PeriodicCharges left join Contracts on Contracts.ID=PeriodicCharges.ContractID left join Rooms on Rooms.ID=Contracts.RoomID
					union all
					--预定 
					select Rooms.StoreID,ReservationCharges.Status,ReservationCharges.PaymentMethodID,ReservationCharges.Amount from ReservationCharges left join Reservations on Reservations.ID=ReservationCharges.ReservationID left join Rooms on Rooms.ID=Reservations.RoomID
					union all
					--一次性收费
					select Rooms.StoreID,Charges.Status,Charges.PaymentMethodID,Charges.Amount from Charges left join Contracts on Charges.ContractID=Contracts.ID left join Rooms on Rooms.ID=Contracts.RoomID
					) as t1 on D.ID=t1.PaymentMethodID
		Where  D.Date Between '{2}' and '{3}' 
						And t1.Status=1 And D.Status=2
		Group By t1.StoreID
		) AS J ON J.StoreID=C.ID
	WHERE 1=1 
	GROUP BY A.ID,A.CityCode,A.CityName
) as t